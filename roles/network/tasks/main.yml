---
- name: Ensure cloudflare ipv6 is patched
  tags:
    - network
  ansible.builtin.uri:
    body:
      value: "{{ 'on' if _network.ipv6 | bool else 'off' }}"
    body_format: json
    follow_redirects: false
    headers:
      Authorization: "Bearer {{ cf_auth_token }}"
    method: PATCH
    status_code:
      - 200
    url: "{{ 'https://api.cloudflare.com/client/v4/zones/' +
             _network.zone_id +
             '/settings/ipv6' }}"
  loop: "{{ cf_network }}"
  loop_control:
    label: "{{ _network.zone_id | default(none) }}"
    loop_var: _network
  when:
    - cf_auth_token is not none
    - _network.ipv6 is defined
    - _network.zone_id is defined

- name: Ensure cloudflare websockets is patched
  tags:
    - network
  ansible.builtin.uri:
    body:
      value: "{{ 'on' if _network.websockets | bool else 'off' }}"
    body_format: json
    follow_redirects: false
    headers:
      Authorization: "Bearer {{ cf_auth_token }}"
    method: PATCH
    status_code:
      - 200
    url: "{{ 'https://api.cloudflare.com/client/v4/zones/' +
             _network.zone_id +
             '/settings/websockets' }}"
  loop: "{{ cf_network }}"
  loop_control:
    label: "{{ _network.zone_id | default(none) }}"
    loop_var: _network
  when:
    - cf_auth_token is not none
    - _network.websockets is defined
    - _network.zone_id is defined

- name: Ensure cloudflare opportunistic onion is patched
  tags:
    - network
  ansible.builtin.uri:
    body:
      value: "{{ 'on' if _network.opportunistic_onion | bool else 'off' }}"
    body_format: json
    follow_redirects: false
    headers:
      Authorization: "Bearer {{ cf_auth_token }}"
    method: PATCH
    status_code:
      - 200
    url: "{{ 'https://api.cloudflare.com/client/v4/zones/' +
             _network.zone_id +
             '/settings/opportunistic_onion' }}"
  loop: "{{ cf_network }}"
  loop_control:
    label: "{{ _network.zone_id | default(none) }}"
    loop_var: _network
  when:
    - cf_auth_token is not none
    - _network.opportunistic_onion is defined
    - _network.zone_id is defined

- name: Ensure cloudflare pseudo ipv4 is patched
  tags:
    - network
  ansible.builtin.uri:
    body:
      value: "{{ _network.pseudo_ipv4 }}"
    body_format: json
    follow_redirects: false
    headers:
      Authorization: "Bearer {{ cf_auth_token }}"
    method: PATCH
    status_code:
      - 200
    url: "{{ 'https://api.cloudflare.com/client/v4/zones/' +
             _network.zone_id +
             '/settings/pseudo_ipv4' }}"
  loop: "{{ cf_network }}"
  loop_control:
    label: "{{ _network.zone_id | default(none) }}"
    loop_var: _network
  when:
    - cf_auth_token is not none
    - _network.pseudo_ipv4 is defined
    - _network.zone_id is defined

- name: Ensure cloudflare ip geolocation is patched
  tags:
    - network
  ansible.builtin.uri:
    body:
      value: "{{ 'on' if _network.ip_geolocation | bool else 'off' }}"
    body_format: json
    follow_redirects: false
    headers:
      Authorization: "Bearer {{ cf_auth_token }}"
    method: PATCH
    status_code:
      - 200
    url: "{{ 'https://api.cloudflare.com/client/v4/zones/' +
             _network.zone_id +
             '/settings/ip_geolocation' }}"
  loop: "{{ cf_network }}"
  loop_control:
    label: "{{ _network.zone_id | default(none) }}"
    loop_var: _network
  when:
    - cf_auth_token is not none
    - _network.ip_geolocation is defined
    - _network.zone_id is defined
...
