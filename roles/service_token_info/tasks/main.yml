---
- name: Ensure cloudflare zone details are gathered
  tags:
    - service_token_info
  ansible.builtin.uri:
    follow_redirects: false
    headers:
      Authorization: "Bearer {{ cf_auth_token }}"
    method: GET
    status_code:
      - 200
      - 401
      - 403
    url: 'https://api.cloudflare.com/client/v4/zones'
  register: _zones_get
  when:
    - cf_auth_token is not none

- name: Ensure cloudflare service token details are gathered
  tags:
    - service_token_info
  ansible.builtin.uri:
    follow_redirects: false
    headers:
      Authorization: "Bearer {{ cf_auth_token }}"
    method: GET
    status_code:
      - 200
    url: "{{ 'https://api.cloudflare.com/client/v4/zones/' +
             _id +
             '/access/service_tokens' }}"
  register: _service_tokens_get
  loop: "{{ _zones_get.json.result |
            map(attribute='id') |
            list |
            default([], true) }}"
  loop_control:
    label: "{{ _id }}"
    loop_var: _id
  when:
    - cf_auth_token is not none

- name: Ensure dictionary of service tokens is generated
  tags:
    - service_token_info
  ansible.builtin.set_fact:
    _cf_service_token_id: "{{ _cf_service_token_id |
                              default({}) |
                              combine({_name: _id}) }}"
  loop: "{{ q('ansible.builtin.subelements', _service_tokens_get.results, 'json.result', {'skip_missing': true}) }}"
  loop_control:
    label: "{{ _name | default(none) }}"
    loop_var: _token
  vars:
    _name: "{{ _token.1.name }}"
    _id: "{{ _token.1.id }}"
  when:
    - _service_tokens_get.results is defined
    - _service_tokens_get.results | length > 0
    - _token.1.id is defined
    - _token.1.name is defined
...
