---
- name: Ensure cloudflare application details are gathered
  tags:
    - application
  ansible.builtin.uri:
    follow_redirects: false
    headers:
      Authorization: "Bearer {{ cf_auth_token }}"
    method: GET
    status_code:
      - 200
    url: "{{ 'https://api.cloudflare.com/client/v4/zones/' +
             _app.zone_id +
             '/access/apps' }}"
  loop: "{{ cf_applications }}"
  loop_control:
    label: "{{ _app.zone_id }}"
    loop_var: _app
  register: _app_get
  when:
    - cf_auth_token is not none
    - _app.zone_id is defined

- name: Ensure dictionary of applications is generated
  tags:
    - application
  ansible.builtin.set_fact:
    _cf_apps: "{{ _cf_apps |
                  default({}) |
                  combine({_name: _id}) }}"
  loop: "{{ q('ansible.builtin.subelements', _app_get.results, 'json.result', {'skip_missing': true}) }}"
  loop_control:
    label: "{{ _name | default(none) }}"
    loop_var: _app
  vars:
    _id: "{{ _app.1.id }}"
    _name: "{{ _app.1.name }}"

- name: Ensure cloudflare applications are present
  tags:
    - application
  ansible.builtin.uri:
    body:
      allowed_ips: "{{ _app.allowed_ips | default(omit) }}"
      app_launcher_visible: "{{ _app.app_launcher_visible | default(true) }}"
      auto_redirect_to_identity: "{{ _app.auto_redirect_to_identity | default(false) }}"
      cors_headers: "{{ _app.cors_headers | default(omit) }}"
      custom_deny_message: "{{ _app.custom_deny_message | default(omit) }}"
      custom_deny_url: "{{ _app.custom_deny_url | default(omit) }}"
      domain: "{{ _app.domain }}"
      enable_binding_cookie: "{{ _app.enable_binding_cookie | default(false) }}"
      http_only_cookie_attribute: "{{ _app.http_only_cookie_attribute | default(true) }}"
      logo_url: "{{ _app.logo_url | default(omit) }}"
      name: "{{ _app.name }}"
      same_site_cookie_attribute: "{{ _app.same_site_cookie_attribute | default(omit) }}"
      service_auth_401_redirect: "{{ _app.service_auth_401_redirect | default(omit) }}"
      session_duration: "{{ _app.session_duration | default('24h') }}"
      skip_interstitial: "{{ _app.skip_interstitial | default(omit) }}"
      type: "{{ _app.type }}"
    body_format: json
    follow_redirects: false
    headers:
      Authorization: "Bearer {{ cf_auth_token }}"
    method: POST
    status_code:
      - 201
    url: "{{ 'https://api.cloudflare.com/client/v4/zones/' +
             _app.zone_id +
             '/access/apps' }}"
  loop: "{{ cf_applications }}"
  loop_control:
    label: "{{ _app.name | default(none) }}"
    loop_var: _app
  when:
    - cf_auth_token is not none
    - _app.domain is defined
    - _app.name is defined
    - _app.type is defined
    - _app.zone_id is defined
    - _cf_apps is not defined or
      _app.name not in _cf_apps.keys()

- name: Ensure cloudflare applications are updated
  tags:
    - application
  ansible.builtin.uri:
    body:
      allowed_ips: "{{ _app.allowed_ips | default(omit) }}"
      app_launcher_visible: "{{ _app.app_launcher_visible | default(true) }}"
      auto_redirect_to_identity: "{{ _app.auto_redirect_to_identity | default(false) }}"
      cors_headers: "{{ _app.cors_headers | default(omit) }}"
      custom_deny_message: "{{ _app.custom_deny_message | default(omit) }}"
      custom_deny_url: "{{ _app.custom_deny_url | default(omit) }}"
      domain: "{{ _app.domain }}"
      enable_binding_cookie: "{{ _app.enable_binding_cookie | default(false) }}"
      http_only_cookie_attribute: "{{ _app.http_only_cookie_attribute | default(true) }}"
      logo_url: "{{ _app.logo_url | default(omit) }}"
      name: "{{ _app.name }}"
      same_site_cookie_attribute: "{{ _app.same_site_cookie_attribute | default(omit) }}"
      service_auth_401_redirect: "{{ _app.service_auth_401_redirect | default(omit) }}"
      session_duration: "{{ _app.session_duration | default('24h') }}"
      skip_interstitial: "{{ _app.skip_interstitial | default(omit) }}"
      type: "{{ _app.type }}"
    body_format: json
    follow_redirects: false
    headers:
      Authorization: "Bearer {{ cf_auth_token }}"
    method: PUT
    status_code:
      - 200
    url: "{{ 'https://api.cloudflare.com/client/v4/zones/' +
             _app.zone_id +
             '/access/apps/' +
             _cf_apps[_app.name] }}"
  loop: "{{ cf_applications }}"
  loop_control:
    label: "{{ _app.name | default(none) }}"
    loop_var: _app
  when:
    - cf_auth_token is not none
    - _app.domain is defined
    - _app.name is defined
    - _app.type is defined
    - _app.zone_id is defined
    - _cf_apps is defined and
      _app.name in _cf_apps.keys()
...
